{
  "openapi": "3.0.0",
  "info": {
    "title": "API Dummy pour test",
    "version": "1.0.0"
  },
  "paths": {
    "/dummy": {
      "get": {
        "summary": "Récupérer la liste des éléments dummy",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Numéro de page pour la pagination",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Nombre d'éléments par page",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des éléments dummy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dummy"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Créer un nouvel élément dummy",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dummy"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Élément dummy créé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dummy"
                }
              }
            }
          }
        }
      }
    },
    "/dummy/{id}": {
      "get": {
        "summary": "Récupérer un élément dummy par son ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Élément dummy trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dummy"
                }
              }
            }
          },
          "404": {
            "description": "Élément dummy non trouvé"
          }
        }
      },
      "put": {
        "summary": "Mettre à jour un élément dummy par son ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dummy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Élément dummy mis à jour",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dummy"
                }
              }
            }
          },
          "404": {
            "description": "Élément dummy non trouvé"
          }
        }
      },
      "delete": {
        "summary": "Supprimer un élément dummy par son ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Élément dummy supprimé"
          },
          "404": {
            "description": "Élément dummy non trouvé"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Inscription d'un nouvel utilisateur",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Inscription réussie, retourne un token JWT",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Inscription réussie"
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erreur de validation ou utilisateur déjà existant"
          },
          "500": {
            "description": "Erreur interne du serveur"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Connexion d'un utilisateur existant",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Connexion réussie, retourne un token JWT",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Connexion réussie"
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Nom d’utilisateur ou mot de passe invalide"
          },
          "500": {
            "description": "Erreur interne du serveur"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Dummy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Nom de Dummy"
          }
        }
      },
      "UserRegister": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "player1"
          },
          "password": {
            "type": "string",
            "example": "motdepasse123"
          }
        },
        "required": ["username", "password"]
      },
      "UserLogin": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "player1"
          },
          "password": {
            "type": "string",
            "example": "motdepasse123"
          }
        },
        "required": ["username", "password"]
      }
    }
  }
}
